from S3EN.estimators import s3enEstimatorClassifier, s3enEstimatorRegressor

def s3enEstimator(feature_list,
                 target_type='classification',
                 validation_ratio=0,
                 patience=None,
                 nb_models_per_stack=20,
                 nb_variables_per_model=None,
                 nb_stack_blocks=10,
                 width=1,
                 depth=1,
                 epochs=100,
                 batch_size=128,
                 activation='elu',
                 batch_norm='no',
                 dropout_rate=0,
                 sample_weight=None,
                 nb_cores=None,
                 enable_gpu='no',
                 memory_growth='no'):
    if target_type == 'classification':
        return s3enEstimatorClassifier(feature_list=feature_list,
                                       validation_ratio=validation_ratio,
                                       patience=patience,
                                       nb_models_per_stack=nb_models_per_stack,
                                       nb_variables_per_model=
                                       nb_variables_per_model,
                                       nb_stack_blocks=nb_stack_blocks,
                                       width=width,
                                       depth=depth,
                                       epochs=epochs,
                                       batch_size=batch_size,
                                       activation=activation,
                                       batch_norm=batch_norm,
                                       dropout_rate=dropout_rate,
                                       sample_weight=sample_weight,
                                       nb_cores=nb_cores,
                                       enable_gpu=enable_gpu,
                                       memory_growth=memory_growth)
    elif target_type == 'regression':
        return s3enEstimatorRegressor(feature_list=feature_list,
                                      validation_ratio=validation_ratio,
                                      patience=patience,
                                      nb_models_per_stack=nb_models_per_stack,
                                      nb_variables_per_model=
                                      nb_variables_per_model,
                                      nb_stack_blocks=nb_stack_blocks,
                                      width=width,
                                      depth=depth,
                                      epochs=epochs,
                                      batch_size=batch_size,
                                      activation=activation,
                                      batch_norm=batch_norm,
                                      dropout_rate=dropout_rate,
                                      sample_weight=sample_weight,
                                      nb_cores=nb_cores,
                                      enable_gpu=enable_gpu,
                                      memory_growth=memory_growth)